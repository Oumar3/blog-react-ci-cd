name: Continuous Deployment

# D√©clenche le CD apr√®s le succ√®s du workflow CI
on:
  workflow_run:
    workflows: ["Continuous Integration"]   # Nom exact du workflow CI
    types:
      - completed

jobs:
  deploy:
    # Ne s'ex√©cute que si le CI a r√©ussi
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      # Checkout pour r√©cup√©rer le repo (optionnel si artefact suffit)
      - uses: actions/checkout@v4

      # T√©l√©charger l'artefact build du CI (utilise celui de Node 22.x)
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: react-build-22.x-${{ github.event.workflow_run.run_number }}     # nom de l'artefact upload√© dans CI
          path: ./dist            # sera disponible dans ./dist du runner

      # D√©ploiement sur le serveur via SSH
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "üöÄ D√©but du d√©ploiement..."
            
            # Se placer dans le r√©pertoire de l'app sur le VPS
            # cd /var/www/my-react-app || { echo "‚ùå R√©pertoire d'app introuvable"; exit 1; }
            
            # # Backup de l'ancien build (optionnel)
            # if [ -d "backup" ]; then rm -rf backup; fi
            # if [ -f "index.html" ]; then 
            #   mkdir -p backup
            #   cp -r * backup/ 2>/dev/null || true
            # fi
            
            # # Supprimer l'ancien build
            # rm -rf assets/ index.html *.js *.css *.ico *.svg 2>/dev/null || true
            
            echo "‚úÖ Ancien build supprim√©"

      # Transfert des fichiers vers le serveur
    #   - name: Transfer files to VPS
    #     uses: appleboy/scp-action@v0.1.7
    #     with:
    #       host: ${{ secrets.VPS_HOST }}
    #       username: ${{ secrets.VPS_USER }}
    #       key: ${{ secrets.VPS_SSH_KEY }}
    #       source: "./dist/*"
    #       target: "/var/www/my-react-app/"
    #       strip_components: 2
          
      # Red√©marrage serveur si n√©cessaire
    #   - name: Restart services
    #     uses: appleboy/ssh-action@v0.1.8
    #     with:
    #       host: ${{ secrets.VPS_HOST }}
    #       username: ${{ secrets.VPS_USER }}
    #       key: ${{ secrets.VPS_SSH_KEY }}
    #       script: |
            # echo "üîÑ Red√©marrage des services..."
            
            # # Red√©marrage nginx (si utilis√©)
            # sudo systemctl reload nginx || echo "‚ö†Ô∏è Nginx non configur√©"
            
            # # Red√©marrage PM2 (si utilis√© pour servir les fichiers statiques)
            # # pm2 restart my-app || echo "‚ö†Ô∏è PM2 non configur√©"
            
            # echo "‚úÖ D√©ploiement termin√© avec succ√®s!"
